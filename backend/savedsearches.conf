[default]
dispatch.earliest_time = -2y
dispatch.latest_time = now
enableSched = 1
cron_schedule = */15 * * * *
allow_skew = 5m
alert.track = 1
[Suspicious Cobalt Strike DNS Beaconing - Sysmon]
search = EventCode=22 extracted_sourcetype="WinEventLog" index="winevent" QueryName IN ("aaa.stage.*", "post.1*") OR QueryName="*.stage.123456.*" | table Image,CommandLine | eval rule_id="f356a9c4-effd-4608-bbf8-408afd5cd006", title="Suspicious Cobalt Strike DNS Beaconing - Sysmon", severity="critical"  | collect index=notable_events
description = "Detects a program that invoked suspicious DNS queries known from Cobalt Strike beacons"

[Unsigned DLL Loaded by Windows Utility]
search = EventCode=7 extracted_sourcetype="WinEventLog" index="winevent" Image IN ("*\\InstallUtil.exe", "*\\RegAsm.exe", "*\\RegSvcs.exe", "*\\regsvr32.exe", "*\\rundll32.exe") NOT (Signed="true" OR SignatureStatus IN ("errorChaining", "errorCode_endpoint", "errorExpired", "trusted") OR Signed!=* OR Signed IN ("", "-") OR SignatureStatus!=* OR SignatureStatus IN ("", "-")) | eval rule_id="b5de0c9a-6f19-43e0-af4e-55ad01f550af", title="Unsigned DLL Loaded by Windows Utility", severity="medium"  | collect index=notable_events
description = "Detects windows utilities loading an unsigned or untrusted DLL. Adversaries often abuse those programs to proxy execution of malicious code. "

[HackTool - Potential Remote Credential Dumping Activity Via CrackMapExec Or Impacket-Secretsdump]
search = EventCode=11 extracted_sourcetype="WinEventLog" index="winevent" Image="*\\svchost.exe" | regex TargetFilename="\\\\Windows\\\\System32\\\\[a-zA-Z0-9]{8}\\.tmp$" | eval rule_id="6e2a900a-ced9-4e4a-a9c2-13e706f9518a", title="HackTool - Potential Remote Credential Dumping Activity Via CrackMapExec Or Impacket-Secretsdump", severity="high"  | collect index=notable_events
description = "Detects default filenames output from the execution of CrackMapExec and Impacket-secretsdump against an endpoint."

[Invoke-Obfuscation VAR++ LAUNCHER OBFUSCATION - PowerShell]
search = EventCode=4104 extracted_source="Microsoft-Windows-PowerShell/Operational" index="winevent" | regex ScriptBlockText="(?i)&&set.*(\\{\\d\\}){2,}\\\\\"\\s+?-f.*&&.*cmd.*/c" | eval rule_id="e54f5149-6ba3-49cf-b153-070d24679126", title="Invoke-Obfuscation VAR++ LAUNCHER OBFUSCATION - PowerShell", severity="high"  | collect index=notable_events
description = "Detects Obfuscated Powershell via VAR++ LAUNCHER"

[Invoke-Obfuscation Via Use Clip - Powershell]
search = EventCode=4104 extracted_source="Microsoft-Windows-PowerShell/Operational" index="winevent" | regex ScriptBlockText="(?i)echo.*clip.*&&.*(Clipboard|i`?n`?v`?o`?k`?e`?)" | eval rule_id="db92dd33-a3ad-49cf-8c2c-608c3e30ace0", title="Invoke-Obfuscation Via Use Clip - Powershell", severity="high"  | collect index=notable_events
description = "Detects Obfuscated Powershell via use Clip.exe in Scripts"

[Invoke-Obfuscation CLIP+ Launcher - PowerShell]
search = EventCode=4104 extracted_source="Microsoft-Windows-PowerShell/Operational" index="winevent" | regex ScriptBlockText="cmd.{0,5}(?:/c|/r).+clip(?:\\.exe)?.{0,4}&&.+clipboard]::\\(\\s\\\\\"\\{\\d\\}.+-f.+\"" | eval rule_id="73e67340-0d25-11eb-adc1-0242ac120002", title="Invoke-Obfuscation CLIP+ Launcher - PowerShell", severity="high"  | collect index=notable_events
description = "Detects Obfuscated use of Clip.exe to execute PowerShell"

[Invoke-Obfuscation RUNDLL LAUNCHER - PowerShell]
search = EventCode=4104 extracted_source="Microsoft-Windows-PowerShell/Operational" index="winevent" ScriptBlockText="*rundll32.exe*" ScriptBlockText="*shell32.dll*" ScriptBlockText="*shellexec_rundll*" ScriptBlockText="*powershell*" | eval rule_id="e6cb92b4-b470-4eb8-8a9d-d63e8583aae0", title="Invoke-Obfuscation RUNDLL LAUNCHER - PowerShell", severity="medium"  | collect index=notable_events
description = "Detects Obfuscated Powershell via RUNDLL LAUNCHER"

[Invoke-Obfuscation Via Use Rundll32 - PowerShell]
search = EventCode=4104 extracted_source="Microsoft-Windows-PowerShell/Operational" index="winevent" ScriptBlockText="*&&*" ScriptBlockText="*rundll32*" ScriptBlockText="*shell32.dll*" ScriptBlockText="*shellexec_rundll*" ScriptBlockText IN ("*value*", "*invoke*", "*comspec*", "*iex*") | eval rule_id="a5a30a6e-75ca-4233-8b8c-42e0f2037d3b", title="Invoke-Obfuscation Via Use Rundll32 - PowerShell", severity="high"  | collect index=notable_events
description = "Detects Obfuscated Powershell via use Rundll32 in Scripts"

[Invoke-Obfuscation COMPRESS OBFUSCATION - PowerShell]
search = EventCode=4104 extracted_source="Microsoft-Windows-PowerShell/Operational" index="winevent" ScriptBlockText="*new-object*" ScriptBlockText="*text.encoding]::ascii*" ScriptBlockText IN ("*system.io.compression.deflatestream*", "*system.io.streamreader*") ScriptBlockText="*readtoend" | eval rule_id="20e5497e-331c-4cd5-8d36-935f6e2a9a07", title="Invoke-Obfuscation COMPRESS OBFUSCATION - PowerShell", severity="medium"  | collect index=notable_events
description = "Detects Obfuscated Powershell via COMPRESS OBFUSCATION"

[Invoke-Obfuscation Via Stdin - Powershell]
search = EventCode=4104 extracted_source="Microsoft-Windows-PowerShell/Operational" index="winevent" | regex ScriptBlockText="(?i)(set).*&&\\s?set.*(environment|invoke|\\$\\{?input).*&&.*\"" | eval rule_id="86b896ba-ffa1-4fea-83e3-ee28a4c915c7", title="Invoke-Obfuscation Via Stdin - Powershell", severity="high"  | collect index=notable_events
description = "Detects Obfuscated Powershell via Stdin in Scripts"

[Invoke-Obfuscation STDIN+ Launcher - Powershell]
search = EventCode=4104 extracted_source="Microsoft-Windows-PowerShell/Operational" index="winevent" | regex ScriptBlockText="cmd.{0,5}(?:/c|/r).+powershell.+(?:\\$?\\{?input\\}?|noexit).+\"" | eval rule_id="779c8c12-0eb1-11eb-adc1-0242ac120002", title="Invoke-Obfuscation STDIN+ Launcher - Powershell", severity="high"  | collect index=notable_events
description = "Detects Obfuscated use of stdin to execute PowerShell"

[Powershell DNSExfiltration]
search = EventCode=4104 extracted_source="Microsoft-Windows-PowerShell/Operational" index="winevent" ScriptBlockText="*Invoke-DNSExfiltrator*" OR (ScriptBlockText="* -i *" ScriptBlockText="* -d *" ScriptBlockText="* -p *" ScriptBlockText="* -doh *" ScriptBlockText="* -t *") | eval rule_id="d59d7842-9a21-4bc6-ba98-64bfe0091355", title="Powershell DNSExfiltration", severity="high"  | collect index=notable_events
description = "DNSExfiltrator allows for transferring (exfiltrate) a file over a DNS request covert channel"

[Powershell Keylogging]
search = EventCode=4104 extracted_source="Microsoft-Windows-PowerShell/Operational" index="winevent" ScriptBlockText="*Get-Keystrokes*" OR (ScriptBlockText="*Get-ProcAddress user32.dll GetAsyncKeyState*" ScriptBlockText="*Get-ProcAddress user32.dll GetForegroundWindow*") | eval rule_id="34f90d3c-c297-49e9-b26d-911b05a4866c", title="Powershell Keylogging", severity="medium"  | collect index=notable_events
description = "Adversaries may log user keystrokes to intercept credentials as the user types them."

[Powershell Install a DLL in System Directory]
search = EventCode=4104 extracted_source="Microsoft-Windows-PowerShell/Operational" index="winevent" | regex ScriptBlockText="(Copy-Item|cpi) .{2,128} -Destination .{1,32}\\\\Windows\\\\(System32|SysWOW64)" | eval rule_id="63bf8794-9917-45bc-88dd-e1b5abc0ecfd", title="Powershell Install a DLL in System Directory", severity="high"  | collect index=notable_events
description = "Uses PowerShell to install/copy a file into a system directory such as "System32" or "SysWOW64""

[Invoke-Obfuscation VAR+ Launcher - PowerShell]
search = EventCode=4104 extracted_source="Microsoft-Windows-PowerShell/Operational" index="winevent" | regex ScriptBlockText="cmd.{0,5}(?:/c|/r)(?:\\s|)\"set\\s[a-zA-Z]{3,6}.*(?:\\{\\d\\}){1,}\\\\\"\\s+?-f(?:.*\\)){1,}.*\"" | eval rule_id="0adfbc14-0ed1-11eb-adc1-0242ac120002", title="Invoke-Obfuscation VAR+ Launcher - PowerShell", severity="high"  | collect index=notable_events
description = "Detects Obfuscated use of Environment Variables to execute PowerShell"

[Invoke-Obfuscation Via Use MSHTA - PowerShell]
search = EventCode=4104 extracted_source="Microsoft-Windows-PowerShell/Operational" index="winevent" ScriptBlockText="*set*" ScriptBlockText="*&&*" ScriptBlockText="*mshta*" ScriptBlockText="*vbscript:createobject*" ScriptBlockText="*.run*" ScriptBlockText="*(window.close)*" | eval rule_id="e55a5195-4724-480e-a77e-3ebe64bd3759", title="Invoke-Obfuscation Via Use MSHTA - PowerShell", severity="high"  | collect index=notable_events
description = "Detects Obfuscated Powershell via use MSHTA in Scripts"

[Driver Load From A Temporary Directory]
search = EventCode=6 extracted_sourcetype="WinEventLog" index="winevent" ImageLoaded="*\\Temp\\*" | eval rule_id="2c4523d5-d481-4ed0-8ec3-7fbf0cb41a75", title="Driver Load From A Temporary Directory", severity="high"  | collect index=notable_events
description = "Detects a driver load from a temporary directory"

[Run PowerShell Script from Redirected Input Stream]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" Image IN ("*\\powershell.exe", "*\\pwsh.exe") | regex CommandLine="\\s-\\s*<" | eval rule_id="c83bf4b5-cdf0-437c-90fa-43d734f7c476", title="Run PowerShell Script from Redirected Input Stream", severity="high"  | collect index=notable_events
description = "Detects PowerShell script execution via input stream redirect"

[Suspicious Encoded PowerShell Command Line]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" Image IN ("*\\powershell.exe", "*\\pwsh.exe") OR OriginalFileName IN ("PowerShell.EXE", "pwsh.dll") (CommandLine="* -e*" CommandLine IN ("* JAB*", "* SUVYI*", "* SQBFAFgA*", "* aQBlAHgA*", "* aWV4I*", "* IAA*", "* IAB*", "* UwB*", "* cwB*")) OR CommandLine IN ("*.exe -ENCOD *", "* BA^J e-*") NOT CommandLine="* -ExecutionPolicy remotesigned *" | eval rule_id="ca2092a1-c273-4878-9b4b-0d60115bf5ea", title="Suspicious Encoded PowerShell Command Line", severity="high"  | collect index=notable_events
description = "Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)"

[LSASS Dump Keyword In CommandLine]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" CommandLine IN ("*lsass.dmp*", "*lsass.zip*", "*lsass.rar*", "*Andrew.dmp*", "*Coredump.dmp*", "*NotLSASS.zip*", "*lsass_2*", "*lsassdump*", "*lsassdmp*") OR (CommandLine="*lsass*" CommandLine="*.dmp*") OR (CommandLine="*SQLDmpr*" CommandLine="*.mdmp*") OR (CommandLine="*nanodump*" CommandLine="*.dmp*") | eval rule_id="ffa6861c-4461-4f59-8a41-578c39f3f23e", title="LSASS Dump Keyword In CommandLine", severity="high"  | collect index=notable_events
description = "Detects the presence of the keywords "lsass" and ".dmp" in the commandline, which could indicate a potential attempt to dump or create a dump of the lsass process. "

[Potential WinAPI Calls Via CommandLine]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" CommandLine IN ("*AddSecurityPackage*", "*AdjustTokenPrivileges*", "*Advapi32*", "*CloseHandle*", "*CreateProcessWithToken*", "*CreatePseudoConsole*", "*CreateRemoteThread*", "*CreateThread*", "*CreateUserThread*", "*DangerousGetHandle*", "*DuplicateTokenEx*", "*EnumerateSecurityPackages*", "*FreeHGlobal*", "*FreeLibrary*", "*GetDelegateForFunctionPointer*", "*GetLogonSessionData*", "*GetModuleHandle*", "*GetProcAddress*", "*GetProcessHandle*", "*GetTokenInformation*", "*ImpersonateLoggedOnUser*", "*kernel32*", "*LoadLibrary*", "*memcpy*", "*MiniDumpWriteDump*", "*ntdll*", "*OpenDesktop*", "*OpenProcess*", "*OpenProcessToken*", "*OpenThreadToken*", "*OpenWindowStation*", "*PtrToString*", "*QueueUserApc*", "*ReadProcessMemory*", "*RevertToSelf*", "*RtlCreateUserThread*", "*secur32*", "*SetThreadToken*", "*VirtualAlloc*", "*VirtualFree*", "*VirtualProtect*", "*WaitForSingleObject*", "*WriteInt32*", "*WriteProcessMemory*", "*ZeroFreeGlobalAllocUnicode*") NOT (Image="*\\MpCmdRun.exe" CommandLine="*GetLoadLibraryWAddress32*") | eval rule_id="ba3f5c1b-6272-4119-9dbd-0bc8d21c2702", title="Potential WinAPI Calls Via CommandLine", severity="high"  | collect index=notable_events
description = "Detects the use of WinAPI Functions via the commandline. As seen used by threat actors via the tool winapiexec"

[Potential File Download Via MS-AppInstaller Protocol Handler]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" CommandLine="*ms-appinstaller://*source=*" CommandLine="*http*" | eval rule_id="180c7c5c-d64b-4a63-86e9-68910451bc8b", title="Potential File Download Via MS-AppInstaller Protocol Handler", severity="medium"  | collect index=notable_events
description = "Detects usage of the "ms-appinstaller" protocol handler via command line to potentially download arbitrary files via AppInstaller.EXE The downloaded files are temporarly stored in ":\Users\%username%\AppData\Local\Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\AC\INetCache\<RANDOM-8-CHAR-DIRECTORY>" "

[Execution Of Non-Existing File]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" NOT Image="*\\*" NOT (Image!=* OR Image IN ("-", "") OR Image IN ("System", "Registry", "MemCompression", "vmmem") OR CommandLine IN ("Registry", "MemCompression", "vmmem")) | eval rule_id="71158e3f-df67-472b-930e-7d287acaa3e1", title="Execution Of Non-Existing File", severity="high"  | collect index=notable_events
description = "Checks whether the image specified in a process creation event is not a full, absolute path (caused by process ghosting or other unorthodox methods to start a process)"

[PktMon.EXE Execution]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" Image="*\\pktmon.exe" OR OriginalFileName="PktMon.exe" | eval rule_id="f956c7c1-0f60-4bc5-b7d7-b39ab3c08908", title="PktMon.EXE Execution", severity="medium"  | collect index=notable_events
description = "Detects execution of PktMon, a tool that captures network packets."

[LOLBIN Execution From Abnormal Drive]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" Image IN ("*\\calc.exe", "*\\certutil.exe", "*\\cmstp.exe", "*\\cscript.exe", "*\\installutil.exe", "*\\mshta.exe", "*\\regsvr32.exe", "*\\rundll32.exe", "*\\wscript.exe") OR OriginalFileName IN ("CALC.EXE", "CertUtil.exe", "CMSTP.EXE", "cscript.exe", "installutil.exe", "MSHTA.EXE", "REGSVR32.EXE", "RUNDLL32.EXE", "wscript.exe") NOT (CurrentDirectory="*C:\\*" OR CurrentDirectory="" OR CurrentDirectory!=*) | eval rule_id="d4ca7c59-e9e4-42d8-bf57-91a776efcb87", title="LOLBIN Execution From Abnormal Drive", severity="medium"  | collect index=notable_events
description = "Detects LOLBINs executing from an abnormal or uncommon drive such as a mounted ISO."

[Suspicious Execution of Powershell with Base64]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" Image IN ("*\\powershell.exe", "*\\pwsh.exe") CommandLine IN ("* -e *", "* -en *", "* -enc *", "* -enco*", "* -ec *") NOT (CommandLine="* -Encoding *" OR ParentImage IN ("*C:\\Packages\\Plugins\\Microsoft.GuestConfiguration.ConfigurationforWindows\\*", "*\\gc_worker.exe*")) | eval rule_id="fb843269-508c-4b76-8b8d-88679db22ce7", title="Suspicious Execution of Powershell with Base64", severity="medium"  | collect index=notable_events
description = "Commandline to launch powershell with a base64 payload"

[Uncommon Svchost Parent Process]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" Image="*\\svchost.exe" NOT (ParentImage IN ("*\\Mrt.exe", "*\\MsMpEng.exe", "*\\ngen.exe", "*\\rpcnet.exe", "*\\services.exe", "*\\TiWorker.exe") OR ParentImage!=* OR ParentImage IN ("-", "")) | eval rule_id="01d2e2a1-5f09-44f7-9fc1-24faa7479b6d", title="Uncommon Svchost Parent Process", severity="medium"  | collect index=notable_events
description = "Detects an uncommon svchost parent process"

[Potential Defense Evasion Via Binary Rename]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" OriginalFileName IN ("Cmd.Exe", "CONHOST.EXE", "7z.exe", "WinRAR.exe", "wevtutil.exe", "net.exe", "net1.exe", "netsh.exe", "InstallUtil.exe") NOT (Image IN ("*\\cmd.exe", "*\\conhost.exe", "*\\7z.exe", "*\\WinRAR.exe", "*\\wevtutil.exe", "*\\net.exe", "*\\net1.exe", "*\\netsh.exe", "*\\InstallUtil.exe")) | eval rule_id="36480ae1-a1cb-4eaa-a0d6-29801d7e9142", title="Potential Defense Evasion Via Binary Rename", severity="medium"  | collect index=notable_events
description = "Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint."

[Potential Rundll32 Execution With DLL Stored In ADS]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" Image="*\\rundll32.exe" OR OriginalFileName="RUNDLL32.EXE" | regex CommandLine="[Rr][Uu][Nn][Dd][Ll][Ll]32(\\.[Ee][Xx][Ee])? \\S+?\\w:\\S+?:" | eval rule_id="9248c7e1-2bf3-4661-a22c-600a8040b446", title="Potential Rundll32 Execution With DLL Stored In ADS", severity="high"  | collect index=notable_events
description = "Detects execution of rundll32 where the DLL being called is stored in an Alternate Data Stream (ADS)."

[Change PowerShell Policies to an Insecure Level]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" OriginalFileName IN ("PowerShell.EXE", "pwsh.dll") OR Image IN ("*\\powershell.exe", "*\\pwsh.exe") CommandLine IN ("*-executionpolicy *", "* -ep *", "* -exec *") CommandLine IN ("*Bypass*", "*Unrestricted*") | eval rule_id="87e3c4e8-a6a8-4ad9-bb4f-46e7ff99a180", title="Change PowerShell Policies to an Insecure Level", severity="medium"  | collect index=notable_events
description = "Detects changing the PowerShell script execution policy to a potentially insecure level using the "-ExecutionPolicy" flag."

[Potential Binary Impersonating Sysinternals Tools]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" Image IN ("*\\accesschk.exe", "*\\accesschk64.exe", "*\\AccessEnum.exe", "*\\ADExplorer.exe", "*\\ADExplorer64.exe", "*\\ADInsight.exe", "*\\ADInsight64.exe", "*\\adrestore.exe", "*\\adrestore64.exe", "*\\Autologon.exe", "*\\Autologon64.exe", "*\\Autoruns.exe", "*\\Autoruns64.exe", "*\\autorunsc.exe", "*\\autorunsc64.exe", "*\\Bginfo.exe", "*\\Bginfo64.exe", "*\\Cacheset.exe", "*\\Cacheset64.exe", "*\\Clockres.exe", "*\\Clockres64.exe", "*\\Contig.exe", "*\\Contig64.exe", "*\\Coreinfo.exe", "*\\Coreinfo64.exe", "*\\CPUSTRES.EXE", "*\\CPUSTRES64.EXE", "*\\ctrl2cap.exe", "*\\Dbgview.exe", "*\\dbgview64.exe", "*\\Desktops.exe", "*\\Desktops64.exe", "*\\disk2vhd.exe", "*\\disk2vhd64.exe", "*\\diskext.exe", "*\\diskext64.exe", "*\\Diskmon.exe", "*\\Diskmon64.exe", "*\\DiskView.exe", "*\\DiskView64.exe", "*\\du.exe", "*\\du64.exe", "*\\efsdump.exe", "*\\FindLinks.exe", "*\\FindLinks64.exe", "*\\handle.exe", "*\\handle64.exe", "*\\hex2dec.exe", "*\\hex2dec64.exe", "*\\junction.exe", "*\\junction64.exe", "*\\ldmdump.exe", "*\\listdlls.exe", "*\\listdlls64.exe", "*\\livekd.exe", "*\\livekd64.exe", "*\\loadOrd.exe", "*\\loadOrd64.exe", "*\\loadOrdC.exe", "*\\loadOrdC64.exe", "*\\logonsessions.exe", "*\\logonsessions64.exe", "*\\movefile.exe", "*\\movefile64.exe", "*\\notmyfault.exe", "*\\notmyfault64.exe", "*\\notmyfaultc.exe", "*\\notmyfaultc64.exe", "*\\ntfsinfo.exe", "*\\ntfsinfo64.exe", "*\\pendmoves.exe", "*\\pendmoves64.exe", "*\\pipelist.exe", "*\\pipelist64.exe", "*\\portmon.exe", "*\\procdump.exe", "*\\procdump64.exe", "*\\procexp.exe", "*\\procexp64.exe", "*\\Procmon.exe", "*\\Procmon64.exe", "*\\psExec.exe", "*\\psExec64.exe", "*\\psfile.exe", "*\\psfile64.exe", "*\\psGetsid.exe", "*\\psGetsid64.exe", "*\\psInfo.exe", "*\\psInfo64.exe", "*\\pskill.exe", "*\\pskill64.exe", "*\\pslist.exe", "*\\pslist64.exe", "*\\psLoggedon.exe", "*\\psLoggedon64.exe", "*\\psloglist.exe", "*\\psloglist64.exe", "*\\pspasswd.exe", "*\\pspasswd64.exe", "*\\psping.exe", "*\\psping64.exe", "*\\psService.exe", "*\\psService64.exe", "*\\psshutdown.exe", "*\\psshutdown64.exe", "*\\pssuspend.exe", "*\\pssuspend64.exe", "*\\RAMMap.exe", "*\\RDCMan.exe", "*\\RegDelNull.exe", "*\\RegDelNull64.exe", "*\\regjump.exe", "*\\ru.exe", "*\\ru64.exe", "*\\sdelete.exe", "*\\sdelete64.exe", "*\\ShareEnum.exe", "*\\ShareEnum64.exe", "*\\shellRunas.exe", "*\\sigcheck.exe", "*\\sigcheck64.exe", "*\\streams.exe", "*\\streams64.exe", "*\\strings.exe", "*\\strings64.exe", "*\\sync.exe", "*\\sync64.exe", "*\\Sysmon.exe", "*\\Sysmon64.exe", "*\\tcpvcon.exe", "*\\tcpvcon64.exe", "*\\tcpview.exe", "*\\tcpview64.exe", "*\\Testlimit.exe", "*\\Testlimit64.exe", "*\\vmmap.exe", "*\\vmmap64.exe", "*\\Volumeid.exe", "*\\Volumeid64.exe", "*\\whois.exe", "*\\whois64.exe", "*\\Winobj.exe", "*\\Winobj64.exe", "*\\ZoomIt.exe", "*\\ZoomIt64.exe") NOT (Company IN ("Sysinternals - www.sysinternals.com", "Sysinternals") OR Company!=*) | eval rule_id="7cce6fc8-a07f-4d84-a53e-96e1879843c9", title="Potential Binary Impersonating Sysinternals Tools", severity="medium"  | collect index=notable_events
description = "Detects binaries that use the same name as legitimate sysinternals tools to evade detection"

[Copying Sensitive Files with Credential Data]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" (Image="*\\esentutl.exe" OR OriginalFileName="\\esentutl.exe" CommandLine IN ("*vss*", "* /m *", "* /y *")) OR CommandLine IN ("*\\windows\\ntds\\ntds.dit*", "*\\config\\sam*", "*\\config\\security*", "*\\config\\system *", "*\\repair\\sam*", "*\\repair\\system*", "*\\repair\\security*", "*\\config\\RegBack\\sam*", "*\\config\\RegBack\\system*", "*\\config\\RegBack\\security*") | eval rule_id="e7be6119-fc37-43f0-ad4f-1f3f99be2f9f", title="Copying Sensitive Files with Credential Data", severity="high"  | collect index=notable_events
description = "Files with well-known filenames (sensitive files with credential data) copying"

[HackTool - LaZagne Execution]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" Image="*\\lazagne.exe" OR (Image IN ("*:\\PerfLogs\\*", "*:\\ProgramData\\*", "*:\\Temp\\*", "*:\\Tmp\\*", "*:\\Windows\\Temp\\*", "*\\AppData\\*", "*\\Downloads\\*", "*\\Users\\Public\\*") CommandLine IN ("*.exe all", "*.exe browsers", "*.exe chats", "*.exe databases", "*.exe games", "*.exe git", "*.exe mails", "*.exe maven", "*.exe memory", "*.exe multimedia", "*.exe sysadmin", "*.exe unused", "*.exe wifi", "*.exe windows")) OR (CommandLine IN ("*all *", "*browsers *", "*chats *", "*databases *", "*games *", "*git *", "*mails *", "*maven *", "*memory *", "*multimedia *", "*php *", "*svn *", "*sysadmin *", "*unused *", "*wifi *", "*windows *") CommandLine IN ("*-oA*", "*-oJ*", "*-oN*", "*-output*", "*-password*", "*-1Password*", "*-apachedirectorystudio*", "*-autologon*", "*-ChromiumBased*", "*-composer*", "*-coreftp*", "*-credfiles*", "*-credman*", "*-cyberduck*", "*-dbvis*", "*-EyeCon*", "*-filezilla*", "*-filezillaserver*", "*-ftpnavigator*", "*-galconfusion*", "*-gitforwindows*", "*-hashdump*", "*-iisapppool*", "*-IISCentralCertP*", "*-kalypsomedia*", "*-keepass*", "*-keepassconfig*", "*-lsa_secrets*", "*-mavenrepositories*", "*-memory_dump*", "*-Mozilla*", "*-mRemoteNG*", "*-mscache*", "*-opensshforwindows*", "*-openvpn*", "*-outlook*", "*-pidgin*", "*-postgresql*", "*-psi-im*", "*-puttycm*", "*-pypykatz*", "*-Rclone*", "*-rdpmanager*", "*-robomongo*", "*-roguestale*", "*-skype*", "*-SQLDeveloper*", "*-squirrel*", "*-tortoise*", "*-turba*", "*-UCBrowser*", "*-unattended*", "*-vault*", "*-vaultfiles*", "*-vnc*", "*-windows*", "*-winscp*", "*-wsl*")) | eval rule_id="c2b86e67-b880-4eec-b045-50bc98ef4844", title="HackTool - LaZagne Execution", severity="medium"  | collect index=notable_events
description = "Detects the execution of the LaZagne. A utility used to retrieve multiple types of passwords stored on a local computer. LaZagne has been leveraged multiple times by threat actors in order to dump credentials. "

[HackTool - XORDump Execution]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" Image="*\\xordump.exe" OR CommandLine IN ("* -process lsass.exe *", "* -m comsvcs *", "* -m dbghelp *", "* -m dbgcore *") | eval rule_id="66e563f9-1cbd-4a22-a957-d8b7c0f44372", title="HackTool - XORDump Execution", severity="high"  | collect index=notable_events
description = "Detects suspicious use of XORDump process memory dumping utility"

[Ie4uinit Lolbin Use From Invalid Path]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" Image="*\\ie4uinit.exe" OR OriginalFileName="IE4UINIT.EXE" NOT (CurrentDirectory IN ("c:\\windows\\system32\\", "c:\\windows\\sysWOW64\\") OR CurrentDirectory!=*) | eval rule_id="d3bf399f-b0cf-4250-8bb4-dfc192ab81dc", title="Ie4uinit Lolbin Use From Invalid Path", severity="medium"  | collect index=notable_events
description = "Detect use of ie4uinit.exe to execute commands from a specially prepared ie4uinit.inf file from a directory other than the usual directories"

[Network Reconnaissance Activity]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" CommandLine="*nslookup*" CommandLine="*_ldap._tcp.dc._msdcs.*" | eval rule_id="e6313acd-208c-44fc-a0ff-db85d572e90e", title="Network Reconnaissance Activity", severity="high"  | collect index=notable_events
description = "Detects a set of suspicious network related commands often used in recon stages"

[Capture Credentials with Rpcping.exe]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" Image="*\\rpcping.exe" CommandLine="*-s*" OR CommandLine="*/s*" OR CommandLine="*–s*" OR CommandLine="*—s*" OR CommandLine="*―s*" (CommandLine="*-u*" OR CommandLine="*/u*" OR CommandLine="*–u*" OR CommandLine="*—u*" OR CommandLine="*―u*" CommandLine="*NTLM*") OR (CommandLine="*-t*" OR CommandLine="*/t*" OR CommandLine="*–t*" OR CommandLine="*—t*" OR CommandLine="*―t*" CommandLine="*ncacn_np*") | eval rule_id="93671f99-04eb-4ab4-a161-70d446a84003", title="Capture Credentials with Rpcping.exe", severity="medium"  | collect index=notable_events
description = "Detects using Rpcping.exe to send a RPC test connection to the target server (-s) and force the NTLM hash to be sent in the process."

[Base64 MZ Header In CommandLine]
search = EventCode=1 extracted_sourcetype="WinEventLog" index="winevent" CommandLine IN ("*TVqQAAMAAAAEAAAA*", "*TVpQAAIAAAAEAA8A*", "*TVqAAAEAAAAEABAA*", "*TVoAAAAAAAAAAAAA*", "*TVpTAQEAAAAEAAAA*") | eval rule_id="22e58743-4ac8-4a9f-bf19-00a0428d8c5f", title="Base64 MZ Header In CommandLine", severity="high"  | collect index=notable_events
description = "Detects encoded base64 MZ header in the commandline"

